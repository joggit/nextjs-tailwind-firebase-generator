/** @type {import('tailwindcss').Config} */
const { fontFamily } = require('tailwindcss/defaultTheme')

module.exports = {
  content: [
    './app/**/*.{js,ts,jsx,tsx,mdx}',
    './pages/**/*.{js,ts,jsx,tsx,mdx}',
    './components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/**/*.{js,ts,jsx,tsx,mdx}',
    './lib/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  darkMode: 'class',
  theme: {
    extend: {
      // Brand Colors - Dynamically populated from theme config
      colors: {
        // Primary brand colors
        primary: {
          50: '{{primaryColor50}}',
          100: '{{primaryColor100}}',
          200: '{{primaryColor200}}',
          300: '{{primaryColor300}}',
          400: '{{primaryColor400}}',
          500: '{{primaryColor}}',
          600: '{{primaryColor600}}',
          700: '{{primaryColor700}}',
          800: '{{primaryColor800}}',
          900: '{{primaryColor900}}',
          950: '{{primaryColor950}}',
          DEFAULT: '{{primaryColor}}',
        },
        secondary: {
          50: '{{secondaryColor50}}',
          100: '{{secondaryColor100}}',
          200: '{{secondaryColor200}}',
          300: '{{secondaryColor300}}',
          400: '{{secondaryColor400}}',
          500: '{{secondaryColor}}',
          600: '{{secondaryColor600}}',
          700: '{{secondaryColor700}}',
          800: '{{secondaryColor800}}',
          900: '{{secondaryColor900}}',
          950: '{{secondaryColor950}}',
          DEFAULT: '{{secondaryColor}}',
        },
        accent: {
          50: '{{accentColor50}}',
          100: '{{accentColor100}}',
          200: '{{accentColor200}}',
          300: '{{accentColor300}}',
          400: '{{accentColor400}}',
          500: '{{accentColor}}',
          600: '{{accentColor600}}',
          700: '{{accentColor700}}',
          800: '{{accentColor800}}',
          900: '{{accentColor900}}',
          950: '{{accentColor950}}',
          DEFAULT: '{{accentColor}}',
        },
        neutral: {
          50: '{{neutralColor50}}',
          100: '{{neutralColor100}}',
          200: '{{neutralColor200}}',
          300: '{{neutralColor300}}',
          400: '{{neutralColor400}}',
          500: '{{neutralColor}}',
          600: '{{neutralColor600}}',
          700: '{{neutralColor700}}',
          800: '{{neutralColor800}}',
          900: '{{neutralColor900}}',
          950: '{{neutralColor950}}',
          DEFAULT: '{{neutralColor}}',
        },
        
        // Semantic colors
        success: {
          50: '#f0fdf4',
          100: '#dcfce7',
          200: '#bbf7d0',
          300: '#86efac',
          400: '#4ade80',
          500: '#22c55e',
          600: '#16a34a',
          700: '#15803d',
          800: '#166534',
          900: '#14532d',
          950: '#052e16',
          DEFAULT: '#22c55e',
        },
        warning: {
          50: '#fffbeb',
          100: '#fef3c7',
          200: '#fde68a',
          300: '#fcd34d',
          400: '#fbbf24',
          500: '#f59e0b',
          600: '#d97706',
          700: '#b45309',
          800: '#92400e',
          900: '#78350f',
          950: '#451a03',
          DEFAULT: '#f59e0b',
        },
        error: {
          50: '#fef2f2',
          100: '#fee2e2',
          200: '#fecaca',
          300: '#fca5a5',
          400: '#f87171',
          500: '#ef4444',
          600: '#dc2626',
          700: '#b91c1c',
          800: '#991b1b',
          900: '#7f1d1d',
          950: '#450a0a',
          DEFAULT: '#ef4444',
        },
        info: {
          50: '#eff6ff',
          100: '#dbeafe',
          200: '#bfdbfe',
          300: '#93c5fd',
          400: '#60a5fa',
          500: '#3b82f6',
          600: '#2563eb',
          700: '#1d4ed8',
          800: '#1e40af',
          900: '#1e3a8a',
          950: '#172554',
          DEFAULT: '#3b82f6',
        },

        // Theme-specific colors
        background: {
          DEFAULT: '{{backgroundColor}}',
          secondary: '{{backgroundSecondary}}',
          muted: '{{backgroundMuted}}',
        },
        foreground: {
          DEFAULT: '{{foregroundColor}}',
          secondary: '{{foregroundSecondary}}',
          muted: '{{foregroundMuted}}',
        },
        border: {
          DEFAULT: '{{borderColor}}',
          secondary: '{{borderSecondary}}',
          muted: '{{borderMuted}}',
        },
        input: {
          DEFAULT: '{{inputBackground}}',
          border: '{{inputBorder}}',
        },
        ring: '{{ringColor}}',
        muted: {
          DEFAULT: '{{mutedBackground}}',
          foreground: '{{mutedForeground}}',
        },
        popover: {
          DEFAULT: '{{popoverBackground}}',
          foreground: '{{popoverForeground}}',
        },
        card: {
          DEFAULT: '{{cardBackground}}',
          foreground: '{{cardForeground}}',
        },
      },

      // Typography - Dynamic font configuration
      fontFamily: {
        sans: ['{{fontFamily}}', ...fontFamily.sans],
        heading: ['{{headingFont}}', '{{fontFamily}}', ...fontFamily.sans],
        body: ['{{bodyFont}}', '{{fontFamily}}', ...fontFamily.sans],
        mono: ['{{monoFont}}', ...fontFamily.mono],
        display: ['{{displayFont}}', '{{fontFamily}}', ...fontFamily.sans],
      },
      
      fontSize: {
        'xs': ['{{fontSizeXS}}', { lineHeight: '{{lineHeightXS}}' }],
        'sm': ['{{fontSizeSM}}', { lineHeight: '{{lineHeightSM}}' }],
        'base': ['{{baseFontSize}}', { lineHeight: '{{baseLineHeight}}' }],
        'lg': ['{{fontSizeLG}}', { lineHeight: '{{lineHeightLG}}' }],
        'xl': ['{{fontSizeXL}}', { lineHeight: '{{lineHeightXL}}' }],
        '2xl': ['{{fontSize2XL}}', { lineHeight: '{{lineHeight2XL}}' }],
        '3xl': ['{{fontSize3XL}}', { lineHeight: '{{lineHeight3XL}}' }],
        '4xl': ['{{fontSize4XL}}', { lineHeight: '{{lineHeight4XL}}' }],
        '5xl': ['{{fontSize5XL}}', { lineHeight: '{{lineHeight5XL}}' }],
        '6xl': ['{{fontSize6XL}}', { lineHeight: '{{lineHeight6XL}}' }],
        '7xl': ['{{fontSize7XL}}', { lineHeight: '{{lineHeight7XL}}' }],
        '8xl': ['{{fontSize8XL}}', { lineHeight: '{{lineHeight8XL}}' }],
        '9xl': ['{{fontSize9XL}}', { lineHeight: '{{lineHeight9XL}}' }],
      },

      fontWeight: {
        hairline: '{{fontWeightHairline}}',
        thin: '{{fontWeightThin}}',
        light: '{{fontWeightLight}}',
        normal: '{{fontWeightNormal}}',
        medium: '{{fontWeightMedium}}',
        semibold: '{{fontWeightSemibold}}',
        bold: '{{fontWeightBold}}',
        extrabold: '{{fontWeightExtrabold}}',
        black: '{{fontWeightBlack}}',
      },

      lineHeight: {
        none: '{{lineHeightNone}}',
        tight: '{{lineHeightTight}}',
        snug: '{{lineHeightSnug}}',
        normal: '{{lineHeightNormal}}',
        relaxed: '{{lineHeightRelaxed}}',
        loose: '{{lineHeightLoose}}',
      },

      letterSpacing: {
        tighter: '{{letterSpacingTighter}}',
        tight: '{{letterSpacingTight}}',
        normal: '{{letterSpacingNormal}}',
        wide: '{{letterSpacingWide}}',
        wider: '{{letterSpacingWider}}',
        widest: '{{letterSpacingWidest}}',
      },

      // Spacing - Custom spacing scale
      spacing: {
        '18': '4.5rem',
        '88': '22rem',
        '128': '32rem',
        '144': '36rem',
        '160': '40rem',
        '176': '44rem',
        '192': '48rem',
        '208': '52rem',
        '224': '56rem',
        '240': '60rem',
        '256': '64rem',
        '288': '72rem',
        '320': '80rem',
        '384': '96rem',
      },

      // Border Radius - Dynamic from component config
      borderRadius: {
        'none': '0px',
        'sm': '{{borderRadiusSM}}',
        DEFAULT: '{{borderRadius}}',
        'md': '{{borderRadiusMD}}',
        'lg': '{{borderRadiusLG}}',
        'xl': '{{borderRadiusXL}}',
        '2xl': '{{borderRadius2XL}}',
        '3xl': '{{borderRadius3XL}}',
        'full': '9999px',
        
        // Component-specific radius
        'button': '{{buttonBorderRadius}}',
        'card': '{{cardBorderRadius}}',
        'input': '{{inputBorderRadius}}',
        'modal': '{{modalBorderRadius}}',
        'badge': '{{badgeBorderRadius}}',
      },

      // Box Shadows - Enhanced shadow system
      boxShadow: {
        'xs': '{{shadowXS}}',
        'sm': '{{shadowSM}}',
        DEFAULT: '{{shadow}}',
        'md': '{{shadowMD}}',
        'lg': '{{shadowLG}}',
        'xl': '{{shadowXL}}',
        '2xl': '{{shadow2XL}}',
        '3xl': '{{shadow3XL}}',
        'inner': '{{shadowInner}}',
        'none': 'none',
        
        // Component-specific shadows
        'button': '{{buttonShadow}}',
        'button-hover': '{{buttonHoverShadow}}',
        'card': '{{cardShadow}}',
        'card-hover': '{{cardHoverShadow}}',
        'modal': '{{modalShadow}}',
        'dropdown': '{{dropdownShadow}}',
        'tooltip': '{{tooltipShadow}}',
        
        // Brand-colored shadows
        'primary': '{{primaryShadow}}',
        'secondary': '{{secondaryShadow}}',
        'accent': '{{accentShadow}}',
        
        // Glow effects
        'glow-sm': '{{glowShadowSM}}',
        'glow': '{{glowShadow}}',
        'glow-lg': '{{glowShadowLG}}',
        'glow-primary': '{{primaryGlowShadow}}',
        'glow-secondary': '{{secondaryGlowShadow}}',
      },

      // Animation & Transition - Dynamic timing
      transitionDuration: {
        '75': '75ms',
        '100': '100ms',
        DEFAULT: '{{animationSpeed}}',
        '200': '200ms',
        '300': '300ms',
        '500': '500ms',
        '700': '700ms',
        '1000': '1000ms',
        
        // Component-specific durations
        'button': '{{buttonTransitionDuration}}',
        'card': '{{cardTransitionDuration}}',
        'modal': '{{modalTransitionDuration}}',
        'page': '{{pageTransitionDuration}}',
      },

      transitionTimingFunction: {
        'bounce-light': 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',
        'bounce-strong': 'cubic-bezier(0.175, 0.885, 0.32, 1.275)',
        'ease-smooth': '{{easeSmooth}}',
        'ease-spring': '{{easeSpring}}',
        'ease-dramatic': '{{easeDramatic}}',
      },

      // Custom Animations
      animation: {
        // Fade animations
        'fade-in': 'fadeIn {{animationSpeed}} ease-out',
        'fade-out': 'fadeOut {{animationSpeed}} ease-in',
        'fade-in-up': 'fadeInUp {{animationSpeed}} ease-out',
        'fade-in-down': 'fadeInDown {{animationSpeed}} ease-out',
        'fade-in-left': 'fadeInLeft {{animationSpeed}} ease-out',
        'fade-in-right': 'fadeInRight {{animationSpeed}} ease-out',
        
        // Scale animations
        'scale-in': 'scaleIn {{animationSpeed}} ease-out',
        'scale-out': 'scaleOut {{animationSpeed}} ease-in',
        'scale-bounce': 'scaleBounce {{animationSpeed}} ease-out',
        
        // Slide animations
        'slide-up': 'slideUp {{animationSpeed}} ease-out',
        'slide-down': 'slideDown {{animationSpeed}} ease-out',
        'slide-left': 'slideLeft {{animationSpeed}} ease-out',
        'slide-right': 'slideRight {{animationSpeed}} ease-out',
        
        // Rotate animations
        'rotate-in': 'rotateIn {{animationSpeed}} ease-out',
        'rotate-out': 'rotateOut {{animationSpeed}} ease-in',
        
        // Bounce animations
        'bounce-light': 'bounceLight 0.6s ease-out',
        'bounce-strong': 'bounceStrong 0.8s ease-out',
        
        // Pulse animations
        'pulse-light': 'pulseLight 2s ease-in-out infinite',
        'pulse-glow': 'pulseGlow 2s ease-in-out infinite',
        
        // Wiggle and shake
        'wiggle': 'wiggle 1s ease-in-out infinite',
        'shake': 'shake 0.82s cubic-bezier(.36,.07,.19,.97)',
        
        // Loading animations
        'spin-slow': 'spin 3s linear infinite',
        'spin-fast': 'spin 0.5s linear infinite',
        'ping-slow': 'ping 3s cubic-bezier(0, 0, 0.2, 1) infinite',
        
        // Floating effect
        'float': 'float 3s ease-in-out infinite',
        'float-delayed': 'float 3s ease-in-out infinite 1.5s',
        
        // Typing effect
        'typing': 'typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite',
        
        // Page transitions
        'page-enter': 'pageEnter {{pageTransitionDuration}} ease-out',
        'page-exit': 'pageExit {{pageTransitionDuration}} ease-in',
        
        // Component-specific animations
        'modal-enter': 'modalEnter {{modalTransitionDuration}} ease-out',
        'modal-exit': 'modalExit {{modalTransitionDuration}} ease-in',
        'dropdown-enter': 'dropdownEnter 200ms ease-out',
        'dropdown-exit': 'dropdownExit 150ms ease-in',
        'tooltip-enter': 'tooltipEnter 150ms ease-out',
        'tooltip-exit': 'tooltipExit 100ms ease-in',
      },

      keyframes: {
        // Fade keyframes
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        fadeOut: {
          '0%': { opacity: '1' },
          '100%': { opacity: '0' },
        },
        fadeInUp: {
          '0%': { opacity: '0', transform: 'translateY(30px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        fadeInDown: {
          '0%': { opacity: '0', transform: 'translateY(-30px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        fadeInLeft: {
          '0%': { opacity: '0', transform: 'translateX(-30px)' },
          '100%': { opacity: '1', transform: 'translateX(0)' },
        },
        fadeInRight: {
          '0%': { opacity: '0', transform: 'translateX(30px)' },
          '100%': { opacity: '1', transform: 'translateX(0)' },
        },
        
        // Scale keyframes
        scaleIn: {
          '0%': { opacity: '0', transform: 'scale(0.9)' },
          '100%': { opacity: '1', transform: 'scale(1)' },
        },
        scaleOut: {
          '0%': { opacity: '1', transform: 'scale(1)' },
          '100%': { opacity: '0', transform: 'scale(0.9)' },
        },
        scaleBounce: {
          '0%': { transform: 'scale(0.3)' },
          '50%': { transform: 'scale(1.05)' },
          '70%': { transform: 'scale(0.9)' },
          '100%': { transform: 'scale(1)' },
        },
        
        // Slide keyframes
        slideUp: {
          '0%': { opacity: '0', transform: 'translateY(100%)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        slideDown: {
          '0%': { opacity: '0', transform: 'translateY(-100%)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        slideLeft: {
          '0%': { opacity: '0', transform: 'translateX(100%)' },
          '100%': { opacity: '1', transform: 'translateX(0)' },
        },
        slideRight: {
          '0%': { opacity: '0', transform: 'translateX(-100%)' },
          '100%': { opacity: '1', transform: 'translateX(0)' },
        },
        
        // Rotate keyframes
        rotateIn: {
          '0%': { opacity: '0', transform: 'rotate(-180deg) scale(0.5)' },
          '100%': { opacity: '1', transform: 'rotate(0deg) scale(1)' },
        },
        rotateOut: {
          '0%': { opacity: '1', transform: 'rotate(0deg) scale(1)' },
          '100%': { opacity: '0', transform: 'rotate(180deg) scale(0.5)' },
        },
        
        // Bounce keyframes
        bounceLight: {
          '0%, 20%, 53%, 80%, 100%': { transform: 'translate3d(0,0,0)' },
          '40%, 43%': { transform: 'translate3d(0, -15px, 0)' },
          '70%': { transform: 'translate3d(0, -7px, 0)' },
          '90%': { transform: 'translate3d(0, -2px, 0)' },
        },
        bounceStrong: {
          '0%, 20%, 53%, 80%, 100%': { transform: 'translate3d(0,0,0)' },
          '40%, 43%': { transform: 'translate3d(0, -30px, 0)' },
          '70%': { transform: 'translate3d(0, -15px, 0)' },
          '90%': { transform: 'translate3d(0, -4px, 0)' },
        },
        
        // Pulse keyframes
        pulseLight: {
          '0%, 100%': { opacity: '1' },
          '50%': { opacity: '0.7' },
        },
        pulseGlow: {
          '0%, 100%': { 
            opacity: '1',
            boxShadow: '0 0 5px currentColor, 0 0 10px currentColor'
          },
          '50%': { 
            opacity: '0.8',
            boxShadow: '0 0 20px currentColor, 0 0 30px currentColor'
          },
        },
        
        // Movement keyframes
        wiggle: {
          '0%, 100%': { transform: 'rotate(-3deg)' },
          '50%': { transform: 'rotate(3deg)' },
        },
        shake: {
          '10%, 90%': { transform: 'translate3d(-1px, 0, 0)' },
          '20%, 80%': { transform: 'translate3d(2px, 0, 0)' },
          '30%, 50%, 70%': { transform: 'translate3d(-4px, 0, 0)' },
          '40%, 60%': { transform: 'translate3d(4px, 0, 0)' },
        },
        float: {
          '0%, 100%': { transform: 'translateY(0px)' },
          '50%': { transform: 'translateY(-10px)' },
        },
        
        // Complex animations
        typing: {
          'from': { width: '0' },
          'to': { width: '100%' },
        },
        'blink-caret': {
          'from, to': { borderColor: 'transparent' },
          '50%': { borderColor: 'currentColor' },
        },
        
        // Page transitions
        pageEnter: {
          '0%': { opacity: '0', transform: 'translateY(20px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        pageExit: {
          '0%': { opacity: '1', transform: 'translateY(0)' },
          '100%': { opacity: '0', transform: 'translateY(-20px)' },
        },
        
        // Component animations
        modalEnter: {
          '0%': { opacity: '0', transform: 'scale(0.95) translateY(-10px)' },
          '100%': { opacity: '1', transform: 'scale(1) translateY(0)' },
        },
        modalExit: {
          '0%': { opacity: '1', transform: 'scale(1) translateY(0)' },
          '100%': { opacity: '0', transform: 'scale(0.95) translateY(-10px)' },
        },
        dropdownEnter: {
          '0%': { opacity: '0', transform: 'scale(0.95) translateY(-5px)' },
          '100%': { opacity: '1', transform: 'scale(1) translateY(0)' },
        },
        dropdownExit: {
          '0%': { opacity: '1', transform: 'scale(1) translateY(0)' },
          '100%': { opacity: '0', transform: 'scale(0.95) translateY(-5px)' },
        },
        tooltipEnter: {
          '0%': { opacity: '0', transform: 'scale(0.8)' },
          '100%': { opacity: '1', transform: 'scale(1)' },
        },
        tooltipExit: {
          '0%': { opacity: '1', transform: 'scale(1)' },
          '100%': { opacity: '0', transform: 'scale(0.8)' },
        },
      },

      // Grid and Layout
      gridTemplateColumns: {
        '13': 'repeat(13, minmax(0, 1fr))',
        '14': 'repeat(14, minmax(0, 1fr))',
        '15': 'repeat(15, minmax(0, 1fr))',
        '16': 'repeat(16, minmax(0, 1fr))',
      },

      // Z-Index scale
      zIndex: {
        '-1': '-1',
        '0': '0',
        '1': '1',
        '10': '10',
        '20': '20',
        '30': '30',
        '40': '40',
        '50': '50',
        '60': '60',
        '70': '70',
        '80': '80',
        '90': '90',
        '100': '100',
        'auto': 'auto',
        'dropdown': '1000',
        'sticky': '1020',
        'fixed': '1030',
        'modal-backdrop': '1040',
        'modal': '1050',
        'popover': '1060',
        'tooltip': '1070',
        'toast': '1080',
      },

      // Backdrop blur
      backdropBlur: {
        'xs': '2px',
        'sm': '4px',
        DEFAULT: '8px',
        'md': '12px',
        'lg': '16px',
        'xl': '24px',
        '2xl': '40px',
        '3xl': '64px',
      },

      // Custom width/height values
      width: {
        '18': '4.5rem',
        '88': '22rem',
        '128': '32rem',
        '144': '36rem',
      },
      height: {
        '18': '4.5rem',
        '88': '22rem',
        '128': '32rem',
        '144': '36rem',
      },
      minHeight: {
        '18': '4.5rem',
        '88': '22rem',
        '128': '32rem',
        '144': '36rem',
      },

      // Container queries
      containers: {
        '2xs': '16rem',
        'xs': '20rem',
        'sm': '24rem',
        'md': '28rem',
        'lg': '32rem',
        'xl': '36rem',
        '2xl': '42rem',
        '3xl': '48rem',
        '4xl': '56rem',
        '5xl': '64rem',
        '6xl': '72rem',
        '7xl': '80rem',
      },
    },
  },
  plugins: [
    // Add any additional plugins here
    require('@tailwindcss/forms'),
    require('@tailwindcss/typography'),
    require('@tailwindcss/container-queries'),
    
    // Custom utility plugin for component styles
    function({ addUtilities, addComponents, theme }) {
      // Component-based utilities
      addComponents({
        // Button components
        '.btn': {
          display: 'inline-flex',
          alignItems: 'center',
          justifyContent: 'center',
          fontWeight: theme('fontWeight.medium'),
          borderRadius: theme('borderRadius.button'),
          transitionProperty: 'all',
          transitionDuration: theme('transitionDuration.button'),
          transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',
          '&:focus': {
            outline: 'none',
            ringWidth: '2px',
            ringColor: theme('colors.primary.500'),
            ringOffsetWidth: '2px',
          },
          '&:disabled': {
            opacity: '0.5',
            cursor: 'not-allowed',
          },
        },
        '.btn-primary': {
          backgroundColor: theme('colors.primary.500'),
          color: 'white',
          boxShadow: theme('boxShadow.button'),
          '&:hover:not(:disabled)': {
            backgroundColor: theme('colors.primary.600'),
            boxShadow: theme('boxShadow.button-hover'),
            transform: '{{hoverTransform}}',
          },
        },
        '.btn-secondary': {
          backgroundColor: theme('colors.secondary.500'),
          color: 'white',
          boxShadow: theme('boxShadow.button'),
          '&:hover:not(:disabled)': {
            backgroundColor: theme('colors.secondary.600'),
            boxShadow: theme('boxShadow.button-hover'),
            transform: '{{hoverTransform}}',
          },
        },
        '.btn-outline': {
          backgroundColor: 'transparent',
          borderWidth: '2px',
          borderColor: theme('colors.primary.500'),
          color: theme('colors.primary.500'),
          '&:hover:not(:disabled)': {
            backgroundColor: theme('colors.primary.500'),
            color: 'white',
            transform: '{{hoverTransform}}',
          },
        },
        '.btn-ghost': {
          backgroundColor: 'transparent',
          color: theme('colors.primary.500'),
          '&:hover:not(:disabled)': {
            backgroundColor: theme('colors.primary.50'),
            transform: '{{hoverTransform}}',
          },
        },

        // Card components
        '.card': {
          backgroundColor: theme('colors.card.DEFAULT'),
          borderRadius: theme('borderRadius.card'),
          boxShadow: theme('boxShadow.card'),
          border: '1px solid',
          borderColor: theme('colors.border.DEFAULT'),
          transitionProperty: 'all',
          transitionDuration: theme('transitionDuration.card'),
          '&:hover': {
            boxShadow: theme('boxShadow.card-hover'),
            transform: '{{cardHoverTransform}}',
          },
        },
        '.card-elevated': {
          boxShadow: theme('boxShadow.lg'),
          '&:hover': {
            boxShadow: theme('boxShadow.xl'),
          },
        },

        // Input components
        '.input': {
          display: 'block',
          width: '100%',
          borderRadius: theme('borderRadius.input'),
          borderWidth: '1px',
          borderColor: theme('colors.input.border'),
          backgroundColor: theme('colors.input.DEFAULT'),
          padding: '0.5rem 0.75rem',
          fontSize: theme('fontSize.sm'),
          lineHeight: theme('lineHeight.5'),
          color: theme('colors.foreground.DEFAULT'),
          transitionProperty: 'border-color, box-shadow',
          transitionDuration: '150ms',
          '&:focus': {
            outline: 'none',
            borderColor: theme('colors.primary.500'),
            ringWidth: '1px',
            ringColor: theme('colors.primary.500'),
          },
          '&::placeholder': {
            color: theme('colors.foreground.muted'),
          },
        },

        // Badge components
        '.badge': {
          display: 'inline-flex',
          alignItems: 'center',
          borderRadius: theme('borderRadius.badge'),
          fontSize: theme('fontSize.xs'),
          fontWeight: theme('fontWeight.medium'),
          padding: '0.25rem 0.5rem',
        },
        '.badge-primary': {
          backgroundColor: theme('colors.primary.100'),
          color: theme('colors.primary.800'),
        },
        '.badge-secondary': {
          backgroundColor: theme('colors.secondary.100'),
          color: theme('colors.secondary.800'),
        },
        '.badge-success': {
          backgroundColor: theme('colors.success.100'),
          color: theme('colors.success.800'),
        },
        '.badge-warning': {
          backgroundColor: theme('colors.warning.100'),
          color: theme('colors.warning.800'),
        },
        '.badge-error': {
          backgroundColor: theme('colors.error.100'),
          color: theme('colors.error.800'),
        },
      })

      // Custom utilities
      addUtilities({
        // Animation utilities based on effects config
        '.animate-hover-{{hoverEffects}}': {
          transitionProperty: 'transform, box-shadow, background-color',
          transitionDuration: theme('transitionDuration.DEFAULT'),
          '&:hover': {
            transform: '{{hoverTransform}}',
            boxShadow: '{{hoverShadow}}',
          },
        },

        // Scroll reveal utilities
        '.scroll-reveal-{{scrollReveal}}': {
          opacity: '0',
          transform: '{{scrollRevealTransform}}',
          transitionProperty: 'opacity, transform',
          transitionDuration: theme('transitionDuration.DEFAULT'),
          '&.in-view': {
            opacity: '1',
            transform: 'none',
          },
        },

        // Glass morphism
        '.glass': {
          backdropFilter: 'blur(16px) saturate(180%)',
          backgroundColor: 'rgba(255, 255, 255, 0.75)',
          border: '1px solid rgba(209, 213, 219, 0.3)',
        },
        '.glass-dark': {
          backdropFilter: 'blur(16px) saturate(180%)',
          backgroundColor: 'rgba(17, 25, 40, 0.75)',
          border: '1px solid rgba(255, 255, 255, 0.125)',
        },

        // Gradient text
        '.text-gradient': {
          backgroundImage: `linear-gradient(135deg, ${theme('colors.primary.500')}, ${theme('colors.secondary.500')})`,
          backgroundClip: 'text',
          color: 'transparent',
        },
        '.text-gradient-primary': {
          backgroundImage: `linear-gradient(135deg, ${theme('colors.primary.400')}, ${theme('colors.primary.600')})`,
          backgroundClip: 'text',
          color: 'transparent',
        },
        '.text-gradient-secondary': {
          backgroundImage: `linear-gradient(135deg, ${theme('colors.secondary.400')}, ${theme('colors.secondary.600')})`,
          backgroundClip: 'text',
          color: 'transparent',
        },
        '.text-gradient-accent': {
          backgroundImage: `linear-gradient(135deg, ${theme('colors.accent.400')}, ${theme('colors.accent.600')})`,
          backgroundClip: 'text',
          color: 'transparent',
        },

        // Background gradients
        '.bg-gradient-brand': {
          backgroundImage: `linear-gradient(135deg, ${theme('colors.primary.500')}, ${theme('colors.secondary.500')})`,
        },
        '.bg-gradient-primary': {
          backgroundImage: `linear-gradient(135deg, ${theme('colors.primary.400')}, ${theme('colors.primary.600')})`,
        },
        '.bg-gradient-secondary': {
          backgroundImage: `linear-gradient(135deg, ${theme('colors.secondary.400')}, ${theme('colors.secondary.600')})`,
        },

        // Responsive text
        '.text-responsive-xs': {
          fontSize: 'clamp(0.75rem, 0.7rem + 0.25vw, 0.875rem)',
        },
        '.text-responsive-sm': {
          fontSize: 'clamp(0.875rem, 0.8rem + 0.375vw, 1rem)',
        },
        '.text-responsive-base': {
          fontSize: 'clamp(1rem, 0.9rem + 0.5vw, 1.125rem)',
        },
        '.text-responsive-lg': {
          fontSize: 'clamp(1.125rem, 1rem + 0.625vw, 1.25rem)',
        },
        '.text-responsive-xl': {
          fontSize: 'clamp(1.25rem, 1.1rem + 0.75vw, 1.5rem)',
        },
        '.text-responsive-2xl': {
          fontSize: 'clamp(1.5rem, 1.3rem + 1vw, 2rem)',
        },
        '.text-responsive-3xl': {
          fontSize: 'clamp(1.875rem, 1.6rem + 1.375vw, 2.5rem)',
        },
        '.text-responsive-4xl': {
          fontSize: 'clamp(2.25rem, 2rem + 1.25vw, 3rem)',
        },
        '.text-responsive-5xl': {
          fontSize: 'clamp(3rem, 2.5rem + 2.5vw, 4rem)',
        },
      })
    },
  ],
}