'use client'

import { useState } from 'react'
import {
  Dialog,
  DialogPanel,
  Disclosure,
  DisclosureButton,
  DisclosurePanel,
  Popover,
  PopoverButton,
  PopoverGroup,
  PopoverPanel,
} from '@headlessui/react'
import {
  Bars3Icon,
  XMarkIcon,
  ChevronDownIcon,
} from '@heroicons/react/24/outline'

export default function Header({
  logo = '/logo.svg',
  companyName = 'Your Company',
  products = [],
  callsToAction = [],
  companyLinks = [],
  extraLinks = [],
  loginHref = '#',
}) {
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)

  return (
    <header className="bg-white">
      <nav aria-label="Global" className="mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8">
        {/* Logo */}
        <div className="flex lg:flex-1">
          <a href="#" className="-m-1.5 p-1.5">
            <span className="sr-only">{companyName}</span>
            <img src={logo} alt={companyName} className="h-8 w-auto" />
          </a>
        </div>

        {/* Mobile menu button */}
        <div className="flex lg:hidden">
          <button
            type="button"
            onClick={() => setMobileMenuOpen(true)}
            className="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700"
          >
            <span className="sr-only">Open main menu</span>
            <Bars3Icon className="size-6" />
          </button>
        </div>

        {/* Desktop Nav */}
        <PopoverGroup className="hidden lg:flex lg:gap-x-12">
          {products.length > 0 && (
            <Popover className="relative">
              <PopoverButton className="flex items-center gap-x-1 text-sm font-semibold text-gray-900">
                Product
                <ChevronDownIcon className="size-5 text-gray-400" />
              </PopoverButton>

              <PopoverPanel className="absolute -left-8 top-full z-10 mt-3 w-screen max-w-md rounded-3xl bg-white shadow-lg ring-1 ring-gray-900/5 p-4">
                {products.map((item) => (
                  <div
                    key={item.name}
                    className="group relative flex gap-x-6 rounded-lg p-4 text-sm hover:bg-gray-50"
                  >
                    <div className="mt-1 flex size-11 items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white">
                      <item.icon className="size-6 text-gray-600 group-hover:text-indigo-600" />
                    </div>
                    <div>
                      <a href={item.href} className="block font-semibold text-gray-900">
                        {item.name}
                        <span className="absolute inset-0" />
                      </a>
                      <p className="mt-1 text-gray-600">{item.description}</p>
                    </div>
                  </div>
                ))}
                {callsToAction.length > 0 && (
                  <div className="grid grid-cols-2 divide-x divide-gray-200 bg-gray-50 mt-4">
                    {callsToAction.map((item) => (
                      <a
                        key={item.name}
                        href={item.href}
                        className="flex items-center justify-center gap-x-2.5 p-3 text-sm font-semibold text-gray-900 hover:bg-gray-100"
                      >
                        <item.icon className="size-5 text-gray-400" />
                        {item.name}
                      </a>
                    ))}
                  </div>
                )}
              </PopoverPanel>
            </Popover>
          )}

          {extraLinks.map((link) => (
            <a key={link.name} href={link.href} className="text-sm font-semibold text-gray-900">
              {link.name}
            </a>
          ))}

          {companyLinks.length > 0 && (
            <Popover className="relative">
              <PopoverButton className="flex items-center gap-x-1 text-sm font-semibold text-gray-900">
                Company
                <ChevronDownIcon className="size-5 text-gray-400" />
              </PopoverButton>
              <PopoverPanel className="absolute -left-8 top-full z-10 mt-3 w-56 rounded-xl bg-white p-2 shadow-lg ring-1 ring-gray-900/5">
                {companyLinks.map((item) => (
                  <a
                    key={item.name}
                    href={item.href}
                    className="block rounded-lg px-3 py-2 text-sm font-semibold text-gray-900 hover:bg-gray-50"
                  >
                    {item.name}
                  </a>
                ))}
              </PopoverPanel>
            </Popover>
          )}
        </PopoverGroup>

        {/* Login Link */}
        <div className="hidden lg:flex lg:flex-1 lg:justify-end">
          <a href={loginHref} className="text-sm font-semibold text-gray-900">
            Log in <span aria-hidden="true">&rarr;</span>
          </a>
        </div>
      </nav>

      {/* Mobile Menu */}
      <Dialog open={mobileMenuOpen} onClose={setMobileMenuOpen} className="lg:hidden">
        <div className="fixed inset-0 z-50" />
        <DialogPanel className="fixed inset-y-0 right-0 z-50 w-full max-w-sm bg-white p-6 overflow-y-auto">
          <div className="flex items-center justify-between">
            <a href="#" className="-m-1.5 p-1.5">
              <span className="sr-only">{companyName}</span>
              <img src={logo} alt={companyName} className="h-8 w-auto" />
            </a>
            <button onClick={() => setMobileMenuOpen(false)} className="-m-2.5 rounded-md p-2.5 text-gray-700">
              <XMarkIcon className="size-6" />
            </button>
          </div>
          <div className="mt-6">
            <div className="-my-6 divide-y divide-gray-200">
              <div className="space-y-2 py-6">
                {products.length > 0 && (
                  <Disclosure>
                    <DisclosureButton className="flex w-full justify-between px-3 py-2 text-base font-semibold text-gray-900 hover:bg-gray-50 rounded-lg">
                      Product
                      <ChevronDownIcon className="size-5 text-gray-500 group-data-[open]:rotate-180" />
                    </DisclosureButton>
                    <DisclosurePanel className="mt-2 space-y-2">
                      {[...products, ...callsToAction].map((item) => (
                        <DisclosureButton
                          key={item.name}
                          as="a"
                          href={item.href}
                          className="block py-2 pl-6 pr-3 text-sm font-semibold text-gray-900 hover:bg-gray-50"
                        >
                          {item.name}
                        </DisclosureButton>
                      ))}
                    </DisclosurePanel>
                  </Disclosure>
                )}

                {extraLinks.map((link) => (
                  <a
                    key={link.name}
                    href={link.href}
                    className="-mx-3 block rounded-lg px-3 py-2 text-base font-semibold text-gray-900 hover:bg-gray-50"
                  >
                    {link.name}
                  </a>
                ))}

                {companyLinks.length > 0 && (
                  <Disclosure>
                    <DisclosureButton className="flex w-full justify-between px-3 py-2 text-base font-semibold text-gray-900 hover:bg-gray-50 rounded-lg">
                      Company
                      <ChevronDownIcon className="size-5 text-gray-500 group-data-[open]:rotate-180" />
                    </DisclosureButton>
                    <DisclosurePanel className="mt-2 space-y-2">
                      {companyLinks.map((item) => (
                        <DisclosureButton
                          key={item.name}
                          as="a"
                          href={item.href}
                          className="block py-2 pl-6 pr-3 text-sm font-semibold text-gray-900 hover:bg-gray-50"
                        >
                          {item.name}
                        </DisclosureButton>
                      ))}
                    </DisclosurePanel>
                  </Disclosure>
                )}
              </div>
              <div className="py-6">
                <a href={loginHref} className="block rounded-lg px-3 py-2.5 text-base font-semibold text-gray-900 hover:bg-gray-50">
                  Log in
                </a>
              </div>
            </div>
          </div>
        </DialogPanel>
      </Dialog>
    </header>
  )
}
