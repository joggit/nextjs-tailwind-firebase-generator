'use client'

import { useState } from 'react'
import { 
  Send, Phone, Mail, MapPin, Clock, Users, 
  MessageSquare, CheckCircle, AlertCircle,
  Linkedin, Twitter, Facebook, Instagram
} from 'lucide-react'

function Contact() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    company: '',
    phone: '',
    service: '',
    message: '',
    budget: ''
  })
  
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [submitStatus, setSubmitStatus] = useState(null) // 'success' | 'error' | null

  const services = [
    'Custom Development',
    'Cloud Migration', 
    'Security Audit',
    'Data Analytics',
    'Process Automation',
    'Consulting & Strategy',
    'Other'
  ]

  const budgetRanges = [
    'Under $5,000',
    '$5,000 - $15,000',
    '$15,000 - $50,000',
    '$50,000 - $100,000',
    'Over $100,000'
  ]

  const contactInfo = [
    {
      icon: Phone,
      title: 'Phone',
      details: '(555) 123-4567',
      subtext: 'Mon-Fri 9AM-6PM EST'
    },
    {
      icon: Mail,
      title: 'Email',
      details: '{{supportEmail}}',
      subtext: 'We respond within 24 hours'
    },
    {
      icon: MapPin,
      title: 'Office',
      details: '123 Business Avenue',
      subtext: 'City, State 12345'
    },
    {
      icon: Clock,
      title: 'Hours',
      details: 'Mon-Fri 9AM-6PM',
      subtext: 'EST (UTC-5)'
    }
  ]

  const socialLinks = [
    { name: 'LinkedIn', icon: Linkedin, href: '#' },
    { name: 'Twitter', icon: Twitter, href: '#' },
    { name: 'Facebook', icon: Facebook, href: '#' },
    { name: 'Instagram', icon: Instagram, href: '#' }
  ]

  const handleSubmit = async (e) => {
    e.preventDefault()
    setIsSubmitting(true)
    
    try {
      // Simulate API call
      await new Promise(resolve => setTimeout(resolve, 2000))
      setSubmitStatus('success')
      setFormData({
        name: '', email: '', company: '', phone: '', 
        service: '', message: '', budget: ''
      })
    } catch (error) {
      setSubmitStatus('error')
    } finally {
      setIsSubmitting(false)
    }
  }

  const handleChange = (e) => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }))
  }

  // Theme-specific styling
  const getSectionStyle = () => {
    switch ('{{themeId}}') {
      case 'tech':
        return 'py-20 px-4 bg-slate-900 text-white relative overflow-hidden'
      case 'creative':
        return 'py-20 px-4 bg-gradient-to-br from-pink-50 via-purple-50 to-blue-50 relative overflow-hidden'
      case 'elegant':
        return 'py-20 px-4 bg-gradient-to-br from-amber-50 to-orange-50 relative'
      case 'minimal':
        return 'py-20 px-4 bg-white'
      case 'corporate':
        return 'py-20 px-4 bg-gray-50'
      default: // modern
        return 'py-20 px-4 bg-white'
    }
  }

  const getTextColor = () => {
    return '{{themeId}}' === 'tech' ? 'text-white' : 'text-gray-900'
  }

  const getSubtextColor = () => {
    switch ('{{themeId}}') {
      case 'tech':
        return 'text-gray-300'
      case 'elegant':
        return 'text-gray-700'
      default:
        return 'text-gray-600'
    }
  }

  const getFormStyle = () => {
    switch ('{{themeId}}') {
      case 'tech':
        return 'bg-slate-800/50 border border-cyan-500/20 rounded-lg backdrop-blur-sm p-8'
      case 'creative':
        return 'bg-white border-2 border-purple-200 rounded-3xl p-8 shadow-xl'
      case 'elegant':
        return 'bg-white border border-amber-200 rounded p-8 shadow-lg'
      case 'minimal':
        return 'bg-white border-l-4 border-black p-8'
      case 'corporate':
        return 'bg-white border border-gray-200 rounded-lg p-8 shadow-lg'
      default: // modern
        return 'bg-white border border-gray-100 rounded-2xl p-8 shadow-xl'
    }
  }

  const getInputStyle = () => {
    const baseStyle = 'w-full px-4 py-3 rounded-lg border focus:outline-none focus:ring-2 focus:ring-offset-2 transition-all duration-200'
    
    switch ('{{themeId}}') {
      case 'tech':
        return `${baseStyle} bg-slate-700 border-slate-600 text-white placeholder-gray-400 focus:ring-cyan-500 focus:border-cyan-500`
      case 'creative':
        return `${baseStyle} border-purple-200 focus:ring-purple-500 focus:border-purple-500 rounded-xl`
      case 'elegant':
        return `${baseStyle} border-amber-200 focus:ring-amber-500 focus:border-amber-500 rounded-sm`
      case 'minimal':
        return `${baseStyle} border-gray-300 focus:ring-black focus:border-black rounded-none`
      case 'corporate':
        return `${baseStyle} border-gray-300 focus:ring-blue-500 focus:border-blue-500`
      default: // modern
        return `${baseStyle} border-gray-300 focus:ring-blue-500 focus:border-blue-500`
    }
  }

  const getButtonStyle = () => {
    switch ('{{themeId}}') {
      case 'tech':
        return 'w-full bg-gradient-to-r from-cyan-500 to-blue-600 text-black font-semibold py-4 px-6 rounded-lg hover:from-cyan-400 hover:to-blue-500 disabled:opacity-50 transition-all duration-200'
      case 'creative':
        return 'w-full bg-gradient-to-r from-purple-500 to-pink-600 text-white font-semibold py-4 px-6 rounded-xl hover:scale-105 disabled:opacity-50 transition-all duration-200'
      case 'elegant':
        return 'w-full bg-amber-700 text-white font-serif font-semibold py-4 px-6 rounded hover:bg-amber-800 disabled:opacity-50 transition-all duration-200'
      case 'minimal':
        return 'w-full bg-black text-white font-semibold py-4 px-6 rounded-none hover:bg-gray-800 disabled:opacity-50 transition-all duration-200'
      case 'corporate':
        return 'w-full bg-blue-700 text-white font-semibold py-4 px-6 rounded-lg hover:bg-blue-800 disabled:opacity-50 transition-all duration-200'
      default: // modern
        return 'w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold py-4 px-6 rounded-lg hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 transition-all duration-200'
    }
  }

  const getContactCardStyle = () => {
    switch ('{{themeId}}') {
      case 'tech':
        return 'p-6 bg-slate-800/30 border border-cyan-500/20 rounded-lg backdrop-blur-sm hover:border-cyan-500/40 transition-all duration-300'
      case 'creative':
        return 'p-6 bg-white border-2 border-purple-200 rounded-2xl hover:border-purple-400 hover:shadow-lg transition-all duration-300'
      case 'elegant':
        return 'p-6 bg-white border border-amber-200 rounded hover:border-amber-400 hover:shadow-md transition-all duration-300'
      case 'minimal':
        return 'p-6 bg-white hover:bg-gray-50 transition-all duration-300'
      case 'corporate':
        return 'p-6 bg-white border border-gray-200 rounded-lg hover:border-blue-300 hover:shadow-md transition-all duration-300'
      default: // modern
        return 'p-6 bg-white border border-gray-100 rounded-xl hover:border-blue-200 hover:shadow-lg transition-all duration-300'
    }
  }

  return (
    <section className={getSectionStyle()}>
      {/* Background Effects */}
      {'{{themeId}}' === 'creative' && (
        <div className="absolute inset-0">
          <div className="absolute top-0 right-0 w-96 h-96 bg-purple-300 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-pulse"></div>
          <div className="absolute bottom-0 left-0 w-96 h-96 bg-pink-300 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-pulse delay-1000"></div>
        </div>
      )}

      <div className="relative {{containerWidth}} mx-auto">
        {/* Header */}
        <div className="text-center mb-16">
          <h2 className={`text-4xl md:text-5xl font-bold ${getTextColor()} mb-6`}
              style={{fontFamily: '{{headingFont}}, sans-serif'}}>
            Get in Touch
          </h2>
          <p className={`text-xl ${getSubtextColor()} max-w-3xl mx-auto`}>
            Ready to transform your {{industry}} operations? Let's discuss your project and create a solution that drives real results.
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
          
          {/* Contact Form */}
          <div className="lg:col-span-2">
            <div className={getFormStyle()}>
              <h3 className={`text-2xl font-bold ${getTextColor()} mb-6`}>
                Start Your Project
              </h3>

              {/* Success Message */}
              {submitStatus === 'success' && (
                <div className="mb-6 p-4 bg-green-50 border border-green-200 rounded-lg flex items-center">
                  <CheckCircle className="w-5 h-5 text-green-600 mr-3" />
                  <span className="text-green-800">Thank you! We'll get back to you within 24 hours.</span>
                </div>
              )}

              {/* Error Message */}
              {submitStatus === 'error' && (
                <div className="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-center">
                  <AlertCircle className="w-5 h-5 text-red-600 mr-3" />
                  <span className="text-red-800">Something went wrong. Please try again or call us directly.</span>
                </div>
              )}

              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className={`block text-sm font-medium ${getTextColor()} mb-2`}>
                      Name *
                    </label>
                    <input
                      type="text"
                      name="name"
                      value={formData.name}
                      onChange={handleChange}
                      required
                      className={getInputStyle()}
                      placeholder="Your full name"
                    />
                  </div>
                  <div>
                    <label className={`block text-sm font-medium ${getTextColor()} mb-2`}>
                      Email *
                    </label>
                    <input
                      type="email"
                      name="email"
                      value={formData.email}
                      onChange={handleChange}
                      required
                      className={getInputStyle()}
                      placeholder="your@email.com"
                    />
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className={`block text-sm font-medium ${getTextColor()} mb-2`}>
                      Company
                    </label>
                    <input
                      type="text"
                      name="company"
                      value={formData.company}
                      onChange={handleChange}
                      className={getInputStyle()}
                      placeholder="Your company name"
                    />
                  </div>
                  <div>
                    <label className={`block text-sm font-medium ${getTextColor()} mb-2`}>
                      Phone
                    </label>
                    <input
                      type="tel"
                      name="phone"
                      value={formData.phone}
                      onChange={handleChange}
                      className={getInputStyle()}
                      placeholder="(555) 123-4567"
                    />
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className={`block text-sm font-medium ${getTextColor()} mb-2`}>
                      Service Interested In
                    </label>
                    <select
                      name="service"
                      value={formData.service}
                      onChange={handleChange}
                      className={getInputStyle()}
                    >
                      <option value="">Select a service</option>
                      {services.map((service) => (
                        <option key={service} value={service}>{service}</option>
                      ))}
                    </select>
                  </div>
                  <div>
                    <label className={`block text-sm font-medium ${getTextColor()} mb-2`}>
                      Budget Range
                    </label>
                    <select
                      name="budget"
                      value={formData.budget}
                      onChange={handleChange}
                      className={getInputStyle()}
                    >
                      <option value="">Select budget range</option>
                      {budgetRanges.map((range) => (
                        <option key={range} value={range}>{range}</option>
                      ))}
                    </select>
                  </div>
                </div>

                <div>
                  <label className={`block text-sm font-medium ${getTextColor()} mb-2`}>
                    Project Details *
                  </label>
                  <textarea
                    name="message"
                    value={formData.message}
                    onChange={handleChange}
                    required
                    rows={6}
                    className={getInputStyle()}
                    placeholder="Tell us about your project, goals, and any specific requirements..."
                  />
                </div>

                <button
                  type="submit"
                  disabled={isSubmitting}
                  className={getButtonStyle()}
                >
                  {isSubmitting ? (
                    <span className="flex items-center justify-center">
                      <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-3"></div>
                      Sending...
                    </span>
                  ) : (
                    <span className="flex items-center justify-center">
                      <Send className="mr-2 w-5 h-5" />
                      Send Message
                    </span>
                  )}
                </button>
              </form>
            </div>
          </div>

          {/* Contact Information */}
          <div className="space-y-8">
            {/* Contact Cards */}
            <div className="space-y-6">
              {contactInfo.map((info, index) => {
                const Icon = info.icon
                return (
                  <div key={index} className={getContactCardStyle()}>
                    <div className="flex items-start space-x-4">
                      <div className={`w-12 h-12 rounded-lg flex items-center justify-center ${
                        '{{themeId}}' === 'tech' 
                          ? 'bg-cyan-500/20 text-cyan-400'
                          : '{{themeId}}' === 'creative'
                          ? 'bg-purple-100 text-purple-600'
                          : '{{themeId}}' === 'elegant'
                          ? 'bg-amber-100 text-amber-700'
                          : '{{themeId}}' === 'minimal'
                          ? 'bg-gray-100 text-black'
                          : '{{themeId}}' === 'corporate'
                          ? 'bg-blue-100 text-blue-700'
                          : 'bg-blue-100 text-blue-600'
                      }`}>
                        <Icon className="w-6 h-6" />
                      </div>
                      <div>
                        <h4 className={`font-semibold ${getTextColor()} mb-1`}>
                          {info.title}
                        </h4>
                        <p className={`${getTextColor()} mb-1`}>
                          {info.details}
                        </p>
                        <p className={`text-sm ${getSubtextColor()}`}>
                          {info.subtext}
                        </p>
                      </div>
                    </div>
                  </div>
                )
              })}
            </div>

            {/* Social Links */}
            <div className={getContactCardStyle()}>
              <h4 className={`font-semibold ${getTextColor()} mb-4`}>
                Follow Us
              </h4>
              <div className="flex space-x-3">
                {socialLinks.map((social) => {
                  const Icon = social.icon
                  return (
                    <a
                      key={social.name}
                      href={social.href}
                      className={`w-10 h-10 rounded-lg flex items-center justify-center transition-all duration-200 ${
                        '{{themeId}}' === 'tech' 
                          ? 'bg-slate-700 text-cyan-400 hover:bg-cyan-500/20'
                          : '{{themeId}}' === 'creative'
                          ? 'bg-purple-100 text-purple-600 hover:bg-purple-200 rounded-full'
                          : '{{themeId}}' === 'elegant'
                          ? 'bg-amber-100 text-amber-700 hover:bg-amber-200'
                          : '{{themeId}}' === 'minimal'
                          ? 'bg-gray-100 text-black hover:bg-gray-200 rounded-none'
                          : '{{themeId}}' === 'corporate'
                          ? 'bg-blue-100 text-blue-700 hover:bg-blue-200'
                          : 'bg-blue-100 text-blue-600 hover:bg-blue-200'
                      }`}
                      aria-label={social.name}
                    >
                      <Icon className="w-5 h-5" />
                    </a>
                  )
                })}
              </div>
            </div>

            {/* Quick Response Promise */}
            <div className={`p-6 rounded-lg ${
              '{{themeId}}' === 'tech' 
                ? 'bg-cyan-500/10 border border-cyan-500/20'
                : '{{themeId}}' === 'creative'
                ? 'bg-purple-50 border border-purple-200'
                : '{{themeId}}' === 'elegant'
                ? 'bg-amber-50 border border-amber-200'
                : '{{themeId}}' === 'minimal'
                ? 'bg-gray-50 border-l-4 border-black'
                : 'bg-blue-50 border border-blue-200'
            }`}>
              <div className="flex items-center space-x-3 mb-3">
                <MessageSquare className={`w-6 h-6 ${
                  '{{themeId}}' === 'tech' ? 'text-cyan-400' :
                  '{{themeId}}' === 'creative' ? 'text-purple-600' :
                  '{{themeId}}' === 'elegant' ? 'text-amber-700' :
                  '{{themeId}}' === 'minimal' ? 'text-black' :
                  'text-blue-600'
                }`} />
                <h4 className={`font-semibold ${getTextColor()}`}>
                  Quick Response Guarantee
                </h4>
              </div>
              <p className={`text-sm ${getSubtextColor()} leading-relaxed`}>
                We respond to all inquiries within 24 hours. For urgent matters, call us directly at (555) 123-4567.
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

export default Contact