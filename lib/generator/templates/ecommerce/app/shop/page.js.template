'use client'

import { useState } from 'react'
import Header from '@/components/Header'
import Footer from '@/components/Footer'
import ProductCard from '@/components/ecommerce/ProductCard'
import CategoryFilter from '@/components/ecommerce/CategoryFilter'
import { Search, Filter, Grid, List } from 'lucide-react'

function ShopPage() {
  const [selectedCategory, setSelectedCategory] = useState('all')
  const [viewMode, setViewMode] = useState('grid')
  const [searchTerm, setSearchTerm] = useState('')

  const products = [
  {
    "id": "prod1",
    "name": "Data Backup Solution",
    "description": "Automated cloud backup service for data protection",
    "price": 49.99,
    "category": "cat1",
    "image": "/data-backup.jpg",
    "features": [
      "Automatic backups",
      "Secure encryption"
    ],
    "inStock": true,
    "rating": 4.2,
    "reviews": 15
  },
  {
    "id": "prod2",
    "name": "Network Firewall",
    "description": "Advanced firewall for network security",
    "price": 199.99,
    "category": "cat2",
    "image": "/network-firewall.jpg",
    "features": [
      "Intrusion detection",
      "Content filtering"
    ],
    "inStock": true,
    "rating": 4.7,
    "reviews": 30
  },
  {
    "id": "prod3",
    "name": "Managed IT Services",
    "description": "Outsource your IT needs to experts",
    "price": 299.99,
    "category": "cat1",
    "image": "/managed-it.jpg",
    "features": [
      "24/7 support",
      "Proactive monitoring"
    ],
    "inStock": true,
    "rating": 4.8,
    "reviews": 40
  },
  {
    "id": "prod4",
    "name": "Antivirus Software",
    "description": "Protect your devices from malware and viruses",
    "price": 29.99,
    "category": "cat2",
    "image": "/antivirus.jpg",
    "features": [
      "Real-time scanning",
      "Regular updates"
    ],
    "inStock": true,
    "rating": 4.5,
    "reviews": 25
  }
];
  const categories = [
  {
    "id": "cat1",
    "name": "Cloud Services",
    "description": "Cloud computing solutions for businesses"
  },
  {
    "id": "cat2",
    "name": "Network Security",
    "description": "Products to secure your network"
  }
];

  const filteredProducts = products.filter(product => {
    const matchesCategory = selectedCategory === 'all' || product.category === selectedCategory;
    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         product.description.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  return (
    <div className="min-h-screen flex flex-col">
      <Header />
      
      <main className="flex-grow">
        {/* Hero Section */}
        <section className="py-16 px-4 bg-gradient-to-br from-blue-50 to-indigo-100">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-5xl font-bold text-gray-900 mb-6">
              Datablox IT Shop
            </h1>
            <p className="text-xl text-gray-600 leading-relaxed">
              Discover our complete collection of premium products
            </p>
          </div>
        </section>

        {/* Search and Filters */}
        <section className="py-8 px-4 bg-white border-b">
          <div className="max-w-6xl mx-auto">
            <div className="flex flex-col md:flex-row gap-4 items-center justify-between">
              {/* Search */}
              <div className="relative flex-grow max-w-md">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                <input
                  type="text"
                  placeholder="Search products..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                />
              </div>

              {/* Category Filter */}
              <select
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
                className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              >
                <option value="all">All Categories</option>
                {categories.map(category => (
                  <option key={category.id} value={category.id}>
                    {category.name}
                  </option>
                ))}
              </select>

              {/* View Mode */}
              <div className="flex border border-gray-300 rounded-lg">
                <button
                  onClick={() => setViewMode('grid')}
                  className={`p-2 ${viewMode === 'grid' ? 'bg-blue-500 text-white' : 'text-gray-500'}`}
                >
                  <Grid className="w-5 h-5" />
                </button>
                <button
                  onClick={() => setViewMode('list')}
                  className={`p-2 ${viewMode === 'list' ? 'bg-blue-500 text-white' : 'text-gray-500'}`}
                >
                  <List className="w-5 h-5" />
                </button>
              </div>
            </div>
          </div>
        </section>

        {/* Products Grid */}
        <section className="py-12 px-4">
          <div className="max-w-6xl mx-auto">
            <div className="flex items-center justify-between mb-8">
              <h2 className="text-2xl font-bold text-gray-900">
                Products ({filteredProducts.length})
              </h2>
            </div>

            {filteredProducts.length === 0 ? (
              <div className="text-center py-12">
                <p className="text-gray-500 text-lg">No products found matching your criteria.</p>
              </div>
            ) : (
              <div className={`${viewMode === 'grid' 
                ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6'
                : 'space-y-4'
              }`}>
                {filteredProducts.map(product => (
                  <ProductCard 
                    key={product.id} 
                    product={product} 
                    viewMode={viewMode}
                  />
                ))}
              </div>
            )}
          </div>
        </section>
      </main>
      
      <Footer />
    </div>
  )
}

export default ShopPage